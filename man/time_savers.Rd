% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shorthand.R
\name{get_1st}
\alias{get_1st}
\alias{get_last}
\alias{get_nth}
\alias{get_1st_word}
\alias{get_last_word}
\alias{get_nth_word}
\alias{get_most_frequent}
\alias{get_most_frequent_word}
\alias{n_unique}
\title{Little functions to replace common minor functions. useful in apply sttements}
\usage{
get_1st(x, type = "v")

get_last(x, type = "v")

get_nth(x, n = 1, type = "v")

get_1st_word(x, type = "v", split = " ")

get_last_word(x, type = "v", split = " ")

get_nth_word(x, n = 1, type = "v", split = " ")

get_most_frequent(x, collapse = NULL)

get_most_frequent_word(
  x,
  ignore.punct = TRUE,
  ignore.case = TRUE,
  split = " ",
  collapse = NULL,
  punct.regex = "[[:punct:]]",
  punct.replace = ""
)

n_unique(x, na.rm = FALSE)
}
\arguments{
\item{x}{vector}

\item{type}{'v' (default) for vector \code{x[1]}; 'l' for list \code{x[[1]]}}

\item{n}{integer, the nth word to select}

\item{split}{character that separated words. Default = ' '}

\item{collapse}{OPTIONAL character - paste output into single string with collapse}

\item{ignore.punct}{logical - ignore punctuation marks}

\item{ignore.case}{logical - ignore case (if true, will return in lower)}

\item{punct.regex}{character - regex used to remove punctuation (by default \verb{[[:punct:]]})}

\item{punct.replace}{character - what to replace punctuation with (default is "")}

\item{na.rm}{whether to ignore NAs when determining uniqueness}
}
\value{
a vector of most common element(s). Will be character unless x is numeric and you don't tell it to collapse into a single string!

a vector of most common element(s). Will be character unless x is numeric and you don't tell it to collapse into a single string!
}
\description{
Little functions to replace common minor functions. useful in apply sttements

Get most common thing(s)

Return numbetr of unique things in x
}
\examples{
unlist(lapply(strsplit(rownames(mtcars), ' '), get_1st))
#[1] "Mazda"    "Mazda"    "Datsun"   "Hornet"   "Hornet"   "Valiant"  "Duster"   "Merc"     "Merc"     "Merc"     "Merc"     "Merc"
#[13] "Merc"     "Merc"     "Cadillac" "Lincoln"  "Chrysler" "Fiat"     "Honda"    "Toyota"   "Toyota"   "Dodge"    "AMC"      "Camaro"
#[25] "Pontiac"  "Fiat"     "Porsche"  "Lotus"    "Ford"     "Ferrari"  "Maserati" "Volvo"

unlist(lapply(strsplit(rownames(mtcars), ' '), get_nth, 2))
#[1] "RX4"         "RX4"         "710"         "4"           "Sportabout"  NA            "360"         "240D"        "230"
#[10] "280"         "280C"        "450SE"       "450SL"       "450SLC"      "Fleetwood"   "Continental" "Imperial"    "128"
#[19] "Civic"       "Corolla"     "Corona"      "Challenger"  "Javelin"     "Z28"         "Firebird"    "X1-9"        "914-2"
#[28] "Europa"      "Pantera"     "Dino"        "Bora"        "142E"

# OR if you just want to pull a simple string apart (e.g. someone's full name):

get_1st_word(rownames(mtcars))
#[1] "Mazda"    "Mazda"    "Datsun"   "Hornet"   "Hornet"   "Valiant"  "Duster"   "Merc"     "Merc"     "Merc"     "Merc"     "Merc"
#[13] "Merc"     "Merc"     "Cadillac" "Lincoln"  "Chrysler" "Fiat"     "Honda"    "Toyota"   "Toyota"   "Dodge"    "AMC"      "Camaro"
#[25] "Pontiac"  "Fiat"     "Porsche"  "Lotus"    "Ford"     "Ferrari"  "Maserati" "Volvo"

get_last_word(rownames(mtcars))
#[1] "RX4"         "Wag"         "710"         "Drive"       "Sportabout"  "Valiant"     "360"         "240D"        "230"
#[10] "280"         "280C"        "450SE"       "450SL"       "450SLC"      "Fleetwood"   "Continental" "Imperial"    "128"
#[19] "Civic"       "Corolla"     "Corona"      "Challenger"  "Javelin"     "Z28"         "Firebird"    "X1-9"        "914-2"
#[28] "Europa"      "L"           "Dino"        "Bora"        "142E"

my_stuff <- c(1:10, 10, 5)
# These are straight forward
get_1st(my_stuff)
get_nth(my_stuff, 3)
get_last(my_stuff)
get_most_frequent(my_stuff)
my_chars <- c("a", "b", "b", "a", "g", "o", "l", "d")
get_most_frequent(my_chars)
get_most_frequent(my_chars, collapse = " & ")
generic_string <- "Who's A good boy? Winston's a good boy!"

get_1st_word(generic_string)
get_nth_word(generic_string, 3)
get_last_word(generic_string)
# default ignores case and punctuation
get_most_frequent_word(generic_string)
# can change like so:
get_most_frequent_word(generic_string, ignore.case = FALSE, ignore.punct = FALSE)

}
\author{
Ben Wiseman, \email{benjamin.wiseman@kornferry.com}
}
